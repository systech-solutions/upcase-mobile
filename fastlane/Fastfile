# vim: ft=ruby
# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

desc 'Bump the app versions and tag a new release'
lane :bump_version do |options|
  type = options.fetch(:type, 'build')
  should_push = options.fetch(:push, true)

  # Increment the iOS build number
  increment_build_number

  if type != 'build'
    # Bump the iOS version number
    increment_version_number(
      bump_type: type
    )
  end

  build_number = get_build_number
  version = get_version_number

  # Set the Android version to match iOS
  set_android_version(
    version_name: version,
    version_code: build_number
  )

  git_commit(
    path: %w(
      ios/Upcase.xcodeproj/project.pbxproj
      ios/Upcase/Info.plist
      ios/UpcaseTests/Info.plist
      android/app/build.gradle
    ),
    message: "Bump version to #{version} (#{build_number})"
  )

  add_git_tag(tag: "v#{version}+#{build_number}")

  if should_push
    push_to_git_remote
  end
end

platform :ios do
  desc 'Build the iOS app'
  lane :build do
    gym(export_xcargs: "-allowProvisioningUpdates")
  end

  desc 'Submit a new iOS build to Apple TestFlight'
  lane :beta do
    build
    testflight(skip_waiting_for_build_processing: true)
  end

  desc 'Submit a new iOS build to the Apple App Store (synonym for :beta)'
  lane :release do
    build
    testflight(skip_waiting_for_build_processing: true)
  end
end

platform :android do
  desc 'Build the Android app'
  lane :build do
    gradle(task: 'clean')
    gradle(
      task: 'assemble',
      build_type: 'Release'
    )
  end

  desc 'Submit a new Android build to the Google Play beta channel'
  lane :beta do
    build
    supply(track: 'beta')
  end

  desc 'Submit a new Android build to the Google Play production channel'
  lane :release do
    build
    supply(track: 'production')
  end
end
